__main__:DEBUG 2023-04-21 23:48:12,480 -  Starting Class
__main__:DEBUG 2023-04-21 23:48:12,487 -  Current train.head()
   District  Area (m²)  Bedrooms  Bathrooms  Garage Cars  Condominium Fee (R$)  Rent (R$)
0        26         85         2          2            1                  1170       4485
1        13         40         1          1            0                   500       1600
2        16         90         2          2            1                   765       4100
3         2         65         2          2            1                   800       3300
4         9         90         2          2            2                  1300       7300
__main__:DEBUG 2023-04-21 23:48:12,492 -  Current train.info()
<class 'pandas.core.frame.DataFrame'>
Int64Index: 6870 entries, 0 to 6869
Data columns (total 7 columns):
 #   Column                Non-Null Count  Dtype
---  ------                --------------  -----
 0   District              6870 non-null   int8 
 1   Area (m²)             6870 non-null   int16
 2   Bedrooms              6870 non-null   int16
 3   Bathrooms             6870 non-null   int16
 4   Garage Cars           6870 non-null   int16
 5   Condominium Fee (R$)  6870 non-null   int32
 6   Rent (R$)             6870 non-null   int32
dtypes: int16(4), int32(2), int8(1)
memory usage: 167.7 KB

__main__:DEBUG 2023-04-21 23:48:12,497 -  Current test.head()
   District  Area (m²)  Bedrooms  Bathrooms  Garage Cars  Condominium Fee (R$)
0        48        128         3          3            1                  1220
1        27         65         2          2            2                   646
2        40         61         3          1            1                   660
3        32         84         2          2            2                  1050
4        29         32         1          1            0                     0
__main__:DEBUG 2023-04-21 23:48:12,501 -  Current test.info()
<class 'pandas.core.frame.DataFrame'>
Int64Index: 1718 entries, 0 to 1717
Data columns (total 6 columns):
 #   Column                Non-Null Count  Dtype
---  ------                --------------  -----
 0   District              1718 non-null   int8 
 1   Area (m²)             1718 non-null   int16
 2   Bedrooms              1718 non-null   int16
 3   Bathrooms             1718 non-null   int16
 4   Garage Cars           1718 non-null   int16
 5   Condominium Fee (R$)  1718 non-null   int32
dtypes: int16(4), int32(1), int8(1)
memory usage: 35.2 KB

__main__:DEBUG 2023-04-21 23:48:12,501 -  Creating X and y dataframes
__main__:DEBUG 2023-04-21 23:48:12,502 -  Creating train test split
__main__:DEBUG 2023-04-21 23:48:12,504 -  Creating the xgboost model for feature importance check
__main__:DEBUG 2023-04-21 23:48:12,507 -  Initializing Bayes Search
__main__:DEBUG 2023-04-21 23:48:20,173 -  The best parameters for the xgboost are:
OrderedDict([('colsample_bytree', 0.519663437301463), ('learning_rate', 0.362171589487346), ('max_depth', 70), ('n_estimators', 115), ('reg_alpha', 82.95674878096297), ('subsample', 0.21641405062882485)])
__main__:DEBUG 2023-04-21 23:48:20,409 -  Plotting features
__main__:DEBUG 2023-04-21 23:48:20,948 -  Dropping low importance features
__main__:DEBUG 2023-04-21 23:48:20,950 -  Testing the linear regression model
__main__:DEBUG 2023-04-21 23:48:20,953 -  The Linear Regressor score was: 1087.9696257707226
__main__:DEBUG 2023-04-21 23:48:20,955 -  Testing the Elastic Net model
__main__:DEBUG 2023-04-21 23:48:20,955 -  Initializing Bayes Search
__main__:DEBUG 2023-04-21 23:48:21,200 -  The best parameters for the Elastic Net are:
OrderedDict([('alpha', 0.5131288564118823), ('l1_ratio', 0.9677812410962722), ('max_iter', 3771)])
__main__:DEBUG 2023-04-21 23:48:21,203 -  The Elastic Net score was: 1087.9582198933047
__main__:DEBUG 2023-04-21 23:48:21,206 -  Testing the Decision Tree model
__main__:DEBUG 2023-04-21 23:48:21,206 -  Initializing Bayes Search
__main__:DEBUG 2023-04-21 23:48:21,531 -  The best parameters for the Decision Tree are:
OrderedDict([('criterion', 'poisson'), ('max_depth', 1560), ('max_leaf_nodes', 317), ('min_samples_split', 34), ('splitter', 'best')])
__main__:DEBUG 2023-04-21 23:48:21,545 -  The Decision Tree score was: 1298.5838387574743
__main__:DEBUG 2023-04-21 23:48:21,548 -  Testing the Random Forest model
__main__:DEBUG 2023-04-21 23:48:21,548 -  Initializing Bayes Search
__main__:DEBUG 2023-04-21 23:49:42,300 -  The best parameters for the Random Forest are:
OrderedDict([('criterion', 'poisson'), ('max_depth', 1195), ('max_leaf_nodes', 966), ('min_samples_split', 82), ('n_estimators', 800)])
__main__:DEBUG 2023-04-21 23:49:43,114 -  The Random Forest score was: 989.4528517134669
__main__:DEBUG 2023-04-21 23:49:43,116 -  Testing the AdaBoost model
__main__:DEBUG 2023-04-21 23:49:43,116 -  Initializing Bayes Search
__main__:DEBUG 2023-04-21 23:49:57,568 -  The best parameters for the AdaBoost are:
OrderedDict([('learning_rate', 0.20424104853441424), ('loss', 'exponential'), ('n_estimators', 2997)])
__main__:DEBUG 2023-04-21 23:49:57,643 -  The AdaBoost score was: 1157.5728232461643
__main__:DEBUG 2023-04-21 23:49:57,643 -  Testing the xgboost model
__main__:DEBUG 2023-04-21 23:49:57,864 -  The XGBoost score was: 973.8795632705742
__main__:DEBUG 2023-04-21 23:49:57,864 -  Finding the best scoring model
__main__:DEBUG 2023-04-21 23:49:57,864 -  The best model is: XGBoost
__main__:DEBUG 2023-04-21 23:49:57,864 -  Ending Class
